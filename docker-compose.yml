version: '3.8'

services:
  tunnel-server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: tunnel-server
    restart: unless-stopped
    ports:
      - "8080:8080"   # 隧道连接端口
      - "8081:8081"   # HTTP代理端口
      - "8082:8082"   # 管理后台端口
    environment:
      - NODE_ENV=production
      - TUNNEL_PORT=8080
      - PROXY_PORT=8081
      - ADMIN_PORT=8082
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-change-me}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-your-password-change-me}
      - MAX_CLIENTS=${MAX_CLIENTS:-10}
      - SSL_ENABLED=${SSL_ENABLED:-false}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      # 如果需要SSL证书，挂载证书目录
      - ./certs:/app/certs:ro
      # 如果需要持久化日志
      - ./logs:/app/logs
    networks:
      - tunnel-network
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    # 健康检查
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8082/api/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 可选: Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: tunnel-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - tunnel-server
    networks:
      - tunnel-network
    # 仅在需要时启用
    profiles:
      - nginx

  # 可选: 监控服务
  prometheus:
    image: prom/prometheus:latest
    container_name: tunnel-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - tunnel-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: tunnel-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - tunnel-network
    profiles:
      - monitoring

networks:
  tunnel-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus_data:
  grafana_data:
